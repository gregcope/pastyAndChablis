AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  RootDomainName:
    Default: pastyandchablis.com
    Description: Domain name for your website (pastyandchablis.com)
    Type: String

Resources:
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: !Sub
        - ${Domain}-private-bucket
        - Domain: !Ref RootDomainName
      LoggingConfiguration:
        DestinationBucketName: !Ref S3BucketLogs
        LogFilePrefix: 'origin/'
      Tags:
        - Key: description
          Value: "pastyandchablis.com restricted origin"

  S3BucketLogs:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      AccessControl: LogDeliveryWrite
      BucketName: !Sub
        - ${Domain}-logs
        - Domain: !Ref RootDomainName

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Sub ${RootDomainName}-private-bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginIdentity}'
            Action: 's3:GetObject'
            Resource: !Sub
              - arn:aws:s3:::${Domain}-private-bucket/*
              - Domain: !Ref RootDomainName

  CloudFrontOriginIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: 'origin identity'

  publicDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:

        Aliases: 
          - !Ref RootDomainName
          - !Sub 'www.${RootDomainName}'

        Origins:
          - DomainName: !Sub ${RootDomainName}-private-bucket.s3.eu-west-2.amazonaws.com
            Id: !Sub 
              - ${Domain}-S3-private-bucket
              - Domain: !Ref RootDomainName
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOriginIdentity}'
        Enabled: 'true'

        Logging:
          Bucket: !GetAtt S3BucketLogs.DomainName
          IncludeCookies: false
          Prefix: 'cdn/'

        Comment: CDN config for Domain

        CustomErrorResponses:
          - ErrorCachingMinTTL: 60
            ErrorCode: 404
            ResponseCode: 404
            ResponsePagePath: '/404.html'

        DefaultRootObject: index.html
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
          TargetOriginId: !Sub
            - ${Domain}-S3-private-bucket
            - Domain: !Ref RootDomainName
          ForwardedValues:
            QueryString: 'false'
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https

        ViewerCertificate:
          AcmCertificateArn: arn:aws:acm:us-east-1:955823752787:certificate/a6d26dda-12a9-45ed-b27e-d2b2ebcd9590 
          SslSupportMethod: sni-only

  WebsiteDNSName:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Join ['', [!Ref 'RootDomainName', .]]
      RecordSets:
      - Name: !Sub 'www.${RootDomainName}'
        Type: A
        AliasTarget:
          HostedZoneId: Z2FDTNDATAQYW2
          DNSName: !GetAtt publicDistribution.DomainName
